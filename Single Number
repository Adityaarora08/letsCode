class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int n=nums.size();
        unordered_map<int, int> m;
        // Array.Sort(nums);
        // for(int i = 0; i < nums.Length; i+=2){
        //     if(i == (nums.Length - 1)) return nums[i];
        //     if(nums[i] != nums[i+1]) return nums[i];
        // }
        for(int i=0;i<n;i++)
        {
            m[nums[i]]+=1;
        }
        for(int i=0;i<n;i++)
        {
            if(m[nums[i]]==1)
                return nums[i];
        }
        return 0;
    }
};
//for(int j=n-1;j>i;j--)
            // {
            //     if(nums[i]==nums[j])
            //     {
            //         break;
            //     }
            // }
            // if(nums[i]==nums[j])
            // {
            //     nums[i]=0;
            //     nums[j]=0;
            // }
            // else
            //     return nums[i];
