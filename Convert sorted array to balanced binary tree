/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 //binary search approach
class Solution {
public:
    TreeNode* toBST(vector<int>& nums,int start,int end) {
        if(start>end){
            return NULL;
        }
        TreeNode *root=new TreeNode(nums[(start+end)/2]);
        root->left=toBST(nums,start,((start+end)/2)-1);
        root->right=toBST(nums,((start+end)/2)+1,end);
        return root;
    }
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        int n=nums.size();
        return toBST(nums,0,n-1);
    }
};
