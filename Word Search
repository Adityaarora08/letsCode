class Solution {
public:
    bool wordd(int i,int j,int idx,vector<vector<char>>& board, string word,vector<vector<bool>> &vis){
        if(idx>word.length()-1){
            return true;
        }
        if(i<0 || j<0 || i>=board.size() || j>=board[0].size())return false;
        if(board[i][j]==word[idx] && board[i][j]!='$'){
            board[i][j]='$';
            bool up=wordd(i+1,j,idx+1,board,word,vis);
            bool down=wordd(i-1,j,idx+1,board,word,vis);
            bool left=wordd(i,j-1,idx+1,board,word,vis);
            bool right=wordd(i,j+1,idx+1,board,word,vis);
            board[i][j]=word[idx];
            return up||down||left||right;
        }else{
            return false;
        }
    }
    bool exist(vector<vector<char>>& board, string word) {
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]==word[0]){
                    vector<vector<bool>> vis(board.size(),vector<bool> (board[0].size(),false));
                    if(wordd(i,j,0,board,word,vis)){
                        return true;
                    }else{
                        continue;
                    }
                }
            }
        }
        return false;
    }
    
};
