class Solution {
public:
    bool isSym(TreeNode* left, TreeNode* right) {
        if (!left && !right ) {
            return true;
        }
        if ((!left || !right) || left->val != right->val) {
            return false;
        }
        return isSym(left->right, right->left) && isSym(left->left, right->right);
    }
    bool isSymmetric(TreeNode* root) {
        return isSym(root->left, root->right);
    }
    
};
// bool check(TreeNode* l,TreeNode* r)
// {
    
//     if(l&&r)
//     {
//         if(l->val==r->val)
//         return true;
//         if(l->val!=r->val)
//         return false;
//     }
//     if(!l&&!r)
//         return true;
//     if ((!l || !r) || l->val != r->val)
//             return false;
//         return check(l->right,r->left)&& check(l->left,r->right);
        
// }
// class Solution {
// public:
//     bool isSymmetric(TreeNode* root) {
//         if(!root)
//             return false;
//         if(root->left && !root->right)
//             return false;
//         if(root->right && !root->left)
//             return false;
//         return check(root->left,root->right);
        
//     }
// };
