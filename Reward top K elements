bool sortbysec(const pair<int,int> &a,
              const pair<int,int> &b)
{
        if(a.first==b.first){
            return (a.second < b.second);
        }
    return (a.first > b.first);
}
class Solution {
public:
    
    vector<int> topStudents(vector<string>& positive_feedback, vector<string>& negative_feedback, vector<string>& report, vector<int>& student_id, int k) {
        unordered_map<string,int> mp;
        for(int i=0;i<positive_feedback.size();i++){
            mp[positive_feedback[i]]=3;
        }
        for(int i=0;i<negative_feedback.size();i++){
            mp[negative_feedback[i]]=-1;
        }
        vector<pair<int,int> > students;
        for(int i=0;i<report.size();i++){
            string curr="";
            int points=0;
            for(int j=0;j<report[i].size();j++){
                while(j<report[i].size() && report[i][j]!=' '){
                    curr+=report[i][j];
                    j++;
                }
                if(mp[curr]==3 || mp[curr]==-1){
                    points+=mp[curr];
                }
                if(j<report[i].size() && report[i][j]==' '){
                    curr="";
                }
            }
            pair<int,int> pr;
            pr.first=points;
            pr.second=student_id[i];
            students.push_back(pr);
        }
        sort(students.begin(),students.end(),sortbysec);
        vector<int> ans;
        for(int i=0;i<k;i++){
            ans.push_back(students[i].second);
        }
        return ans;
    }
};
