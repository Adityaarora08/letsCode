//Problem- search patterns
//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    void prefix_function(vector<int> &lps,int m,string pat){
        lps[0]=0;
        int i=1,j=0;
        while(i<m){
            if(pat[i]==pat[j]){
                j++;
                lps[i]=j;
                i++;
            }else{
                if(j!=0){
                    j=lps[j-1];
                }else{
                    lps[i]=0;
                    i++;
                }
            }
        }
    }
        vector <int> search(string pat, string txt)
        {
            int n=txt.length();
            int m=pat.length();
            vector<int> lps(m,0);
            prefix_function(lps,m,pat);
            int i=0,j=0;
            vector <int> ans;
            while(i<n){
                if(txt[i]==pat[j]){
                    j++;
                    i++;
                }
                if(j==m){
                    ans.push_back(i-m+1);
                    j=lps[j-1];
                }else if (i < n && pat[j] != txt[i]) { 
                    if (j == 0)         
                     i++;
                    else
                     j = lps[j - 1];  
                   }
            }
            if(ans.size()==0){
                ans.push_back(-1);
            }
            return ans;
        }
     
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string S, pat;
        cin >> S >> pat;
        Solution ob;
        vector <int> res = ob.search(pat, S);
        if (res.size()==0)
            cout<<-1<<endl;
        else {
            for (int i : res) cout << i << " ";
            cout << endl;
        }
    }
    return 0;
}
