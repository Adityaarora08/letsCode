/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node* temp=head;
        while(temp!=NULL){
            Node* t=temp->next;
            Node* copy=new Node(temp->val);
            temp->next=copy;
            copy->next=t;
            temp=t;
        }
        temp=head;
        while(temp!=NULL){
            if(temp->random!=NULL)
            temp->next->random=temp->random->next;
            temp=temp->next->next;
        }
        temp=head;
        Node *pseudoHead = new Node(0);
          Node *copy = pseudoHead;

          while (temp != NULL) {
            Node* front = temp->next->next;

            // extract the copy
            copy->next = temp->next;

            // restore the original list
            temp->next = front;
              
            copy = copy -> next; 
            temp = front;
          }
        return pseudoHead->next;
    }
};
