/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL){
            return {};
        }
        stack<TreeNode*> currLevel;
        stack<TreeNode*> nextLevel;
        currLevel.push(root);
        bool leftToright=true;
        
        while(!currLevel.empty()){
        vector<int> a;
        int n=currLevel.size();
		for(int i=0;i<n;i++){
        TreeNode* temp=currLevel.top();
        currLevel.pop();
		if(temp){
            a.push_back(temp->val);
            
            if(leftToright){
                if(temp->left){
                    nextLevel.push(temp->left);
                }
                if(temp->right){
                    nextLevel.push(temp->right);
                }
            }
            else{
                if(temp->right){
                    nextLevel.push(temp->right);
                }
                if(temp->left){
                    nextLevel.push(temp->left);
                }
            } 
        }
        }
        if(currLevel.empty()){
            leftToright= !leftToright;
            swap(currLevel,nextLevel);
        }
		ans.push_back(a);
        }
        return ans;
    }
};
