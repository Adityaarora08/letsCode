class MedianFinder {
public:
    MedianFinder() {
        
    }
    priority_queue<int,vector<int> > pqmax;
    priority_queue<int, vector<int>, greater<int> > pqmin;
    void addNum(int num) {
        if(pqmin.size()==pqmax.size()){
            if(pqmax.size()==0){
                pqmax.push(num);
                return;
            }
            if(num<pqmax.top()){
                pqmax.push(num);
            }else{
                pqmin.push(num);
            }
        }else{
            if(pqmin.size()<pqmax.size()){
                if(num>=pqmax.top()){
                    pqmin.push(num);
                }else{
                    int temp=pqmax.top();
                    pqmax.pop();
                    pqmin.push(temp);
                    pqmax.push(num);
                }
            }else{
                if(num<=pqmin.top()){
                    pqmax.push(num);
                }else{
                    int temp=pqmin.top();
                    pqmin.pop();
                    pqmax.push(temp);
                    pqmin.push(num);
                }
            }
        }
    }
    
    double findMedian() {
        if(pqmin.size()==pqmax.size()){
            return ((pqmin.top()+pqmax.top())/2.0);
        }
        else if(pqmin.size()>pqmax.size()){
            return pqmin.top();
        }else{
            return pqmax.top();
        }
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
