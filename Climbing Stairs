class Solution {
public:
    // int countStairs(int n,vector<int> &dp){
    //     if(n<=1){
    //         return 1;
    //     }
    //     int l,r;
    //     if(dp[n]!=-1)return dp[n];
    //      l=countStairs(n-1,dp);
    //      r=countStairs(n-2,dp);
    //      dp[n]=l+r;
    //     return dp[n];
    // }
    int climbStairs(int n) {
        
        // vector<int> dp(n+1,-1);
        int prev1=1,prev2=1;
        // dp[0]=1,dp[1]=1;
        if(n==1)return 1;
        for(int i=2;i<=n;i++){
            int newprev=prev1+prev2;
            prev1=prev2;
            prev2=newprev;
        }
        return prev2;
        // return countStairs(n,dp);
    }
};
