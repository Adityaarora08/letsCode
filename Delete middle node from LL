/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteMiddle(ListNode* head) {
        ListNode* slow=head,*fast=head;
        int count=1;
        if(head->next!=NULL){
            while(fast!=NULL && fast->next!=NULL){
            fast=fast->next->next;
            if(fast!=NULL && fast->next!=NULL)
            count+=2;
        }
        if(fast==NULL)count++;
        else count+=2;
        }
        count/=2;
        // count++;
        while(count>1 && slow!=NULL){
            slow=slow->next;
            count--;
        }
        if(count==0){
           return head->next;
       }
        // while(fast->next!=NULL && fast->next->next!=NULL){
        //     fast=fast->next->next;
        //     slow=slow->next;
        // }
        if(slow!=NULL && slow->next!=NULL)
        slow->next=slow->next->next;
        return head;
    }
};
